name: release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build
    needs: create_release
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config: 
        - {
          os: windows-latest,
          src_file: a.exe,
          output_path: .\bin\a_windows.exe,
          rename_command: ren
        }
        - {
          os: macos-latest,
          src_file: a.out,
          output_path: ./bin/a_macos.out,
          rename_command: mv
        }
        - {
          os: ubuntu-latest,
          src_file: a.out,
          output_path: ./bin/a_linux.out,
          rename_command: mv
        }
        
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: release

      - name: Create new branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout -b release_${{ matrix.config.os }}

      - name: Build
        run: g++ main.cpp

      - name: Move outputs
        run: ${{ matrix.config.rename_command }} ${{ matrix.config.src_file }} ${{ matrix.config.output_path }}

      - name: Commit
        run: |
          git config user.name "Actions release workflow"
          git config user.email "kondo.eque@gmail.com"
          git add ${{ matrix.config.output_path }}
          git commit -m "Updated binary on ${{ matrix.config.os }}"
          git push --set-upstream-to=origin/release_${{ matrix.config.os }} release_${{ matrix.config.os }}

  create_pr:
    name: Create PR
    needs: build
    runs-on: ubuntu_latest
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: release-${{ matrix.os }}

      - name: Create PR
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "release"
          pr_title: "${{ github.ref }}: Updated binary files on ${{ matrix.os }}"
          pr_body: "Updated binary files automatically."
          pr_draft: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

     # - name: Upload Release Asset
     #   id: upload-release-asset
     #   uses: actions/upload-release-asset@v1.0.2
     #   env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     #   with:
     #     upload_url: ${{ needs.create_release.outputs.upload_url }}
     #     asset_path: ${{ matrix.config.src_file }}
     #     asset_name: ${{ matrix.config.file_name }}
     #     asset_content_type: application/binary
          